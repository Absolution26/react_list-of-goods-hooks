{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","SORT_FIELD_ALPHBT","SORT_FIELD_LENGTH","App","useState","sortType","setSortType","isReversed","setIsReversed","isResetShown","visibleGoods","sort","good1","good2","localeCompare","length","reverse","getVisibleGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"gPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAoB,WACpBC,EAAoB,SAuBnB,IAAMC,EAAgB,WAC3B,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAOMC,EAAeJ,GAAYE,EAC3BG,EA/BR,SAAyBL,EAAkBE,GACzC,IAAMG,EAAY,UAAOV,GAEzB,OAAQK,GACN,KAAKJ,EACHS,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MACF,KAAKX,EACHQ,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAU7D,OAJIR,GACFG,EAAaM,UAGRN,EAacO,CAAgBZ,EAAUE,GAE/C,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYf,IAAaJ,IAE7BoB,QAAS,kBAAMf,EAAYL,IAP7B,iCAYA,wBACEkB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYf,IAAaH,IAE7BmB,QAAS,kBAAMf,EAAYJ,IAP7B,4BAYA,wBACEiB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAab,IAEjBc,QAAS,kBAAMb,GAAeD,IAPhC,qBAYCE,GACC,wBACEU,KAAK,SACLD,UAAU,4BACVG,QAnDI,WACZf,EAAY,IACZE,GAAc,IA8CR,sBAUJ,6BACGE,EAAaY,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC1GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b198e246.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHBT = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getVisibleGoods(sortType: string, isReversed: boolean): string[] {\n  const visibleGoods = [...goodsFromServer];\n\n  switch (sortType) {\n    case SORT_FIELD_ALPHBT:\n      visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n    case SORT_FIELD_LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const reset = () => {\n    setSortType('');\n    setIsReversed(false);\n  };\n\n  const isResetShown = sortType || isReversed;\n  const visibleGoods = getVisibleGoods(sortType, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SORT_FIELD_ALPHBT },\n          )}\n          onClick={() => setSortType(SORT_FIELD_ALPHBT)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SORT_FIELD_LENGTH },\n          )}\n          onClick={() => setSortType(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {isResetShown && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}